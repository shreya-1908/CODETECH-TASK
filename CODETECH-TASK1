#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function prototypes
int hasUpperCase(const char *password);
int hasLowerCase(const char *password);
int hasDigit(const char *password);
int hasSpecialChar(const char *password);
int isUnique(const char *password);
void assessPasswordStrength(const char *password);

int main() {
    char password[100];

    printf("Enter your password: ");
    scanf("%99s", password);

    assessPasswordStrength(password);

    return 0;
}

// Function to check for uppercase letters
int hasUpperCase(const char *password) {
    while (*password) {
        if (isupper((unsigned char)*password)) {
            return 1;
        }
        password++;
    }
    return 0;
}

// Function to check for lowercase letters
int hasLowerCase(const char *password) {
    while (*password) {
        if (islower((unsigned char)*password)) {
            return 1;
        }
        password++;
    }
    return 0;
}

// Function to check for digits
int hasDigit(const char *password) {
    while (*password) {
        if (isdigit((unsigned char)*password)) {
            return 1;
        }
        password++;
    }
    return 0;
}

// Function to check for special characters
int hasSpecialChar(const char *password) {
    const char specialChars[] = "!@#$%^&*()-_+=<>?";
    while (*password) {
        if (strchr(specialChars, *password)) {
            return 1;
        }
        password++;
    }
    return 0;
}

// Function to check for uniqueness
int isUnique(const char *password) {
    int charCount[256] = {0};
    while (*password) {
        charCount[(unsigned char)*password]++;
        if (charCount[(unsigned char)*password] > 1) {
            return 0;
        }
        password++;
    }
    return 1;
}

// Function to assess password strength
void assessPasswordStrength(const char *password) {
    int length = strlen(password);
    int score = 0;

    if (length >= 8) score += 2; // Length check
    if (hasUpperCase(password)) score += 2;
    if (hasLowerCase(password)) score += 2;
    if (hasDigit(password)) score += 2;
    if (hasSpecialChar(password)) score += 2;
    if (isUnique(password)) score += 2;

    printf("Password strength: ");
    if (score <= 4) {
        printf("Weak\n");
    } else if (score <= 8) {
        printf("Moderate\n");
    } else {
        printf("Strong\n");
    }

    // Provide detailed feedback
    printf("Feedback:\n");
    if (length < 8) {
        printf("- Password should be at least 8 characters long.\n");
    }
    if (!hasUpperCase(password)) {
        printf("- Add at least one uppercase letter.\n");
    }
    if (!hasLowerCase(password)) {
        printf("- Add at least one lowercase letter.\n");
    }
    if (!hasDigit(password)) {
        printf("- Add at least one digit.\n");
    }
    if (!hasSpecialChar(password)) {
        printf("- Add at least one special character (e.g., !@#$%^&*).\n");
    }
    if (!isUnique(password)) {
        printf("- Ensure all characters are unique.\n");
    }
}
